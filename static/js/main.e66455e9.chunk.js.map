{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","src","id","alt","height","width","name","email","CardList","robots","map","user","i","SearchBox","searchField","searchChange","type","placeholder","onChange","Scroll","style","overflow","children","App","onSearchChange","event","setState","target","value","state","fetch","then","response","json","filteredRobots","this","filter","robot","toLowerCase","includes","length","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"gQAeeA,EAbF,SAACC,GACV,OACI,sBAAKC,UAAU,sDAAf,UACI,qBAAKC,IAAG,+BAA0BF,EAAMG,IAAMC,IAAI,OAAOC,OAAO,QAAQC,MAAM,UAC9E,gCACI,6BAAKN,EAAMO,OACX,4BAAIP,EAAMQ,eCeXC,G,MAnBE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAChB,OACI,qBAAKT,UAAU,YAAf,SAEQS,EAAOC,KAAI,SAACC,EAAMC,GACd,OACI,cAAC,EAAD,CAEIV,GAAIO,EAAOG,GAAGV,GACdI,KAAMG,EAAOG,GAAGN,KAChBC,MAAOE,EAAOG,GAAGL,OAHZK,UCKlBC,EAbG,SAAC,GAAgC,EAA/BC,YAAgC,IAAnBC,EAAkB,EAAlBA,aAC7B,OACI,qBAAKf,UAAU,MAAf,SACI,uBACIA,UAAU,mCACVgB,KAAK,SACLC,YAAY,gBACZC,SAAUH,OCAXI,EARA,SAACpB,GACZ,OACI,qBAAKqB,MAAO,CAAEC,SAAU,SAAUjB,OAAO,SAAzC,SACKL,EAAMuB,YCsCJC,G,wDApCX,aAAc,IAAD,8BACT,gBAcJC,eAAiB,SAACC,GACd,EAAKC,SAAS,CAACZ,YAAYW,EAAME,OAAOC,SAdxC,EAAKC,MAAM,CACPpB,OAAQ,GACRK,YAAa,IAJR,E,qDAQb,WAAoB,IAAD,OACfgB,MAAM,8CACDC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAE,GAAI,OAAI,EAAKP,SAAS,CAACjB,OAAOwB,S,oBAQ5C,WAAS,IAAD,OACEC,EAAiBC,KAAKN,MAAMpB,OAAO2B,QAAO,SAAAC,GAC5C,OAAOA,EAAM/B,KAAKgC,cAAcC,SAAS,EAAKV,MAAMf,YAAYwB,kBAEpE,OAAQH,KAAKN,MAAMpB,OAAO+B,OAG1B,sBAAKxC,UAAU,KAAf,UACY,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWe,aAAcoB,KAAKX,iBAC9B,cAAC,EAAD,UACI,cAAC,EAAD,CAAUf,OAAQyB,SANlC,oBAAIlC,UAAU,KAAd,4B,GAzBUyC,IAAMC,YCMTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBd,MAAK,YAAkD,IAA/Ce,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCCdO,IAASC,OACL,cAAC,EAAD,IAEFC,SAASC,eAAe,SAO1BX,M","file":"static/js/main.e66455e9.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Card = (props) =>{\r\n    return (\r\n        <div className=\"tc grow bg-light-green br3 pa3 ma2 dib bw2 shadow-5\">\r\n            <img src={`https://robohash.org/${props.id}`} alt=\"robo\" height=\"200px\" width=\"200px\"/>\r\n            <div>\r\n                <h2>{props.name}</h2>\r\n                <p>{props.email}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Card;","import React from \"react\";\r\nimport Card from './Card';\r\nimport './CardList.css';\r\n\r\nconst CardList = ({ robots }) => {\r\n    return (\r\n        <div className=\"container\">\r\n            {\r\n                robots.map((user, i) => {\r\n                    return (\r\n                        <Card\r\n                            key={i}\r\n                            id={robots[i].id}\r\n                            name={robots[i].name}\r\n                            email={robots[i].email}\r\n                        />\r\n                    );\r\n                })\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CardList;\r\n","import React from \"react\";\r\n\r\n\r\nconst SearchBox = ({searchField, searchChange}) => {\r\n    return(\r\n        <div className=\"pa2\">\r\n            <input \r\n                className=\"pa3 ba b--green bg-lightest-blue\"\r\n                type=\"search\" \r\n                placeholder=\"search robots\"\r\n                onChange={searchChange}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n    return (\r\n        <div style={{ overflow: 'scroll', height:'435px' }}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Scroll;","import React from \"react\";\r\nimport CardList from \"../components/CardList\";\r\nimport SearchBox from \"../components/SearchBox\";\r\nimport Scroll from \"../components/Scroll\";\r\nimport \"./App.css\";\r\n\r\nclass App extends React.Component{\r\n    constructor(){\r\n        super()\r\n        this.state={\r\n            robots: [],\r\n            searchField: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n            .then(response => response.json())\r\n            .then(json => this.setState({robots:json}))   \r\n    }\r\n\r\n\r\n    onSearchChange = (event)=> {\r\n        this.setState({searchField:event.target.value});\r\n    }\r\n\r\n    render(){\r\n        const filteredRobots = this.state.robots.filter(robot => {\r\n            return robot.name.toLowerCase().includes(this.state.searchField.toLowerCase());\r\n        })\r\n        return !this.state.robots.length?\r\n        <h1 className=\"tc\">Loading...</h1>\r\n        :\r\n        <div className=\"tc\">\r\n                    <h1 className=\"f1\">RoboFriends</h1>\r\n                    <SearchBox searchChange={this.onSearchChange} />\r\n                    <Scroll>\r\n                        <CardList robots={filteredRobots} />\r\n                    </Scroll>\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\n\nReactDOM.render(\n    <App />\n  , \n  document.getElementById('root')\n);\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}